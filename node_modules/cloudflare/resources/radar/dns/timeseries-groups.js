"use strict";
// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeseriesGroups = void 0;
const resource_1 = require("../../../resource.js");
const core_1 = require("../../../core.js");
class TimeseriesGroups extends resource_1.APIResource {
    cacheHit(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.cacheHit({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/cache_hit', { query, ...options })._thenUnwrap((obj) => obj.result);
    }
    dnssec(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.dnssec({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/dnssec', { query, ...options })._thenUnwrap((obj) => obj.result);
    }
    dnssecAware(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.dnssecAware({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/dnssec_aware', {
            query,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    dnssecE2E(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.dnssecE2E({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/dnssec_e2e', { query, ...options })._thenUnwrap((obj) => obj.result);
    }
    ipVersion(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.ipVersion({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/ip_version', { query, ...options })._thenUnwrap((obj) => obj.result);
    }
    matchingAnswer(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.matchingAnswer({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/matching_answer', {
            query,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    protocol(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.protocol({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/protocol', { query, ...options })._thenUnwrap((obj) => obj.result);
    }
    queryType(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.queryType({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/query_type', { query, ...options })._thenUnwrap((obj) => obj.result);
    }
    responseCode(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.responseCode({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/response_code', {
            query,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
    responseTTL(query = {}, options) {
        if ((0, core_1.isRequestOptions)(query)) {
            return this.responseTTL({}, query);
        }
        return this._client.get('/radar/dns/timeseries_groups/response_ttl', {
            query,
            ...options,
        })._thenUnwrap((obj) => obj.result);
    }
}
exports.TimeseriesGroups = TimeseriesGroups;
//# sourceMappingURL=timeseries-groups.js.map